$darkGrey: #1d1d1d;
$orange: #FF8E79;
$darkPurple: #493082;
$purple: #7c7ccf;
$lightPurple: #ececf8;

$blue: #0084D6;
$darkBlue: #262a4c;
$desktopContainer: 1100px;
$articleContainer: 980px;
$lightBlue: #00A6ED;
$gold: #e2c13d;
$navbarHeight: 55px;

$OneDarkBG: #282c34;
$headerShadow: 3px 3px 0px $darkBlue;
$textShadow: 2px 2px 0px $darkBlue;
$boxShadow: 5px 5px 0px 0px rgba($darkBlue, 0.4);
$textColor: #e6ebff;

@mixin desktop-down() {@media only screen and (max-width: 1200px) { @content; }}

@mixin tablet-down() {@media only screen and (max-width: 768px) { @content; }}

@mixin phone-down() {@media only screen and (max-width: 480px) { @content; }}

@mixin gradientBorder($color1, $color2) {
    border: 3px solid transparent;
    border-image: linear-gradient(to right, $color1, $color2);
    border-image-slice: 1;
}

@mixin backgroundTransition($backgroundColor, $time, $direction) {
    position: relative;
    transform: translateZ(0);

    &:before {
        content: "";
        position: absolute;
        z-index: -1;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: $backgroundColor;
        transform: scaleY(0);

        @if $direction == "up" {
            transform-origin: 0% 100%;
        }
        @else if $direction == "down" {
            transform-origin: 100% 0%;
        }
        
        transition-property: transform;
        transition: $time ease-out;
    }
    
    &:hover:before {
        transform: scaleY(1);
    }   
}

@mixin textTransition($textElement, $textColor, $newTextColor, $time, $direction) {
    //set texts properties
    #{$textElement} {
        background-clip: text;
        -webkit-text-fill-color: transparent;
        @if $direction == "up" {
            background-image: linear-gradient($textColor, $textColor, $newTextColor, $newTextColor);
        }
        @else if $direction == "down" {
            background-image: linear-gradient($newTextColor, $newTextColor, $textColor, $textColor);
            background-position-y: 100%;
        }

        
        background-size: auto 400%;
        transition: background $time ease-out;
    }

    &:hover {
        //when parent is hovered (e.g. a button) set text background
        #{$textElement} {
            @if $direction == "up" {
                background-position-y: 100%;
            }
            @else if $direction == "down" {
                background-position-y: 0%;
            }
            
        }
    }
}   